import Head from 'next/head'
import {useState, useEffect, useMemo} from 'react';
import cn from 'classnames';
import Image from 'next/image';
import { readAllData } from "@/api/list";
import {PageHeader, Button, Input, LoadingIndicator} from '@/components';
import styles from '@/styles/index.module.scss';

export default function Home() {
  const [listAllCommodity, setListAllCommodity] = useState([]);
  const [searchName, setSearchName] = useState("");
  const [page, setPage] = useState(10);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      const data = await readAllData();
      const filtered = data.filter(el => el.uuid);
      setListAllCommodity(filtered);
      setLoading(false);
    };
    fetchData();
  }, []);

  const commodity = useMemo(()=> {
    if (searchName === ''){
      const hasNextPage = page < listAllCommodity?.length;
      return{
        list: hasNextPage ? listAllCommodity?.slice(0, page) :  listAllCommodity,
        hasNextPage,
      }
    }

    const dataCommodity = [...listAllCommodity];
    const filteredComodity = dataCommodity.filter(
      el =>
        el.komoditas &&
        el.komoditas.toLowerCase().includes(searchName.toLowerCase())
    );
    const hasNextPage = page < filteredComodity?.length;
    return{
      list: hasNextPage ? filteredComodity?.slice(0, page) :  filteredComodity,
      hasNextPage,
    }
  },[listAllCommodity, searchName, page]);

  const title = useMemo(() =>  (searchName && searchName !== '' && `Pencarian untuk '${searchName}'`) ||
  "List Komoditas", [searchName]);

  
  return (
    <>
      <Head>
        <title>List Komoditas | Fisher!</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <PageHeader
          left={
            <h2>{title}</h2>
          }
          right={
            <Button variant="primary" icons="add"> 
              Tambah Sumber Perikanan
            </Button>
          }
        />
        <div className={styles.search}>
          <Input
            type="text"
            value={searchName}
            onChange={e => setSearchName(e.target.value)}
            className={styles.searchInput}
            placeholder="Ketik nama komoditas yang dicari"
          />
        </div>
        <div
          className={
            cn(styles.listCommodity, {[styles.center]: commodity?.list?.length <= 0 || loading})
          }
        >
          {(loading && <LoadingIndicator />) ||
            (commodity?.list?.length > 0 &&
              commodity?.list?.map((el, idx) => (
                <div className={styles.commodity} key={el.uuid + idx}>
                  <Image
                    width="100"
                    height="100"
                    src="/fish.jpg"
                    className={styles.commodityImage}
                    alt="commodityImage"
                  />
                  <div className={styles.commodityInfo}>
                    <p className={styles.commodityName}>{el.komoditas || ""}</p>
                    <p className={styles.commodityPrice}>
                      {(el.price && `Rp.${el.price}`) || "-"}
                    </p>
                    <p className={styles.commodityPlace}>{`${el.area_kota}, ${el.area_provinsi}`}</p>
                    <p className={styles.commoditySize}>
                      {(el.size && `${el.size} cm`) || "-"}
                    </p>
                  </div>
                </div>
              ))) || (
              <p className={styles.commodityEmpty}>
                Tidak ada komoditas bernama {`'searchName'`}
              </p>
            )}
        </div>
        {!loading && commodity?.hasNextPage && <div className={styles.loadingMore}>
          <Button variant="primary" onClick={() => setPage(page + 10)}>
            Load More
          </Button>
        </div>}
      </main>
    </>
  )
}
